{
  "name": "graphql-codegen-golang",
  "description": "Graphql Code Generator plugin for generating Golang",
  "scripts": {
    "dev": "yarn run build && yarn run codegen",
    "build": "tsc",
    "codegen": "yarn run graphql-codegen",
    "test": "go test -v ./pkg/rickandmorty/",
    "mock": "graphql-inspector serve graphql/schema.graphql",
    "format": "prettier --write '**/*.{js,jsx,ts,tsx,json,yaml,gql,md,html,css}'",
    "lint": "eslint --ext .js,.jsx,.ts,.tsx .",
    "build:precommit": "yarn run dev && :"
  },
  "dependencies": {
    "@graphql-codegen/plugin-helpers": "1.17.8",
    "graphql": "15.3.0",
    "liquidjs": "9.15.0"
  },
  "devDependencies": {
    "@graphql-codegen/cli": "1.17.8",
    "@graphql-inspector/cli": "2.2.0",
    "@graphql-tools/utils": "6.1.0",
    "@typescript-eslint/eslint-plugin": "3.10.1",
    "@typescript-eslint/parser": "3.10.1",
    "eslint": "7.7.0",
    "eslint-plugin-import": "2.22.0",
    "husky": "4.2.5",
    "lint-staged": "10.2.12",
    "prettier": "2.1.0",
    "typescript": "4.0.2"
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged"
    }
  },
  "lint-staged": {
    "*.{js,jsx,ts,tsx,json,yaml,gql,md,html,css}": [
      "prettier --write"
    ],
    "*.{js,jsx,ts,tsx}": [
      "eslint"
    ],
    "*": [
      "yarn run build:precommit"
    ]
  },
  "prettier": {
    "arrowParens": "avoid",
    "semi": false,
    "singleQuote": true
  },
  "eslintConfig": {
    "parser": "@typescript-eslint/parser",
    "extends": [
      "eslint:recommended",
      "plugin:import/errors",
      "plugin:import/warnings",
      "plugin:import/typescript",
      "plugin:@typescript-eslint/recommended"
    ],
    "ignorePatterns": [
      "dist/"
    ]
  },
  "renovate": {
    "extends": [
      "github>ctison/renovate"
    ]
  },
  "main": "dist/index.js",
  "files": [
    "README.md",
    "dist/"
  ],
  "repository": {
    "url": "https://github.com/ctison/graphql-codegen-golang.git",
    "type": "git"
  },
  "license": "MIT",
  "keywords": [
    "graphql-codegen",
    "graphql",
    "golang"
  ]
}
